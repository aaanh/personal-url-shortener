import { type NextPage } from "next";
import Head from "next/head";

import urlRoutePairs from "../db/url";
import { useEffect, useState } from "react";

import { GrHome } from "react-icons/gr";
import { AiFillGithub } from "react-icons/ai";

interface Item {
  source: string;
  destination: string;
}

export const getStaticProps = () => {
  return {
    props: {
      owner_first_name: process.env.OWNER_FIRST_NAME,
      owner_last_name: process.env.OWNER_LAST_NAME,
      owner_github: process.env.GITHUB_URL,
      owner_homepage: process.env.OWNER_HOMEPAGE,
    },
  };
};

const Home: NextPage = (props: any) => {
  const [host, setHost] = useState<string>("");

  useEffect(() => {
    setHost(window.location.href);
  }, []);

  return (
    <>
      <Head>
        <title>{props.owner_first_name + `'s URL shortener`}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main className="p-4">
        <h1 className="text-2xl">
          Welcome to {props.owner_first_name + `'s `}URL Shortener v0.1.0-alpha
        </h1>
        <p className="pb-2">
          Application is running at{" "}
          <span className="font-mono text-info">{host}</span>
        </p>
        <div className="flex space-x-2">
          <a className="btn-sm btn text-primary" href={props.owner_homepage}>
            <GrHome></GrHome>
          </a>

          <a className="btn-sm btn" href={props.owner_github}>
            <AiFillGithub></AiFillGithub>
          </a>
        </div>

        <div className="flex flex-col overflow-x-auto">
          <h2 className="pb-4 text-center text-2xl text-primary">URLs</h2>
          <hr></hr>
          <table className="table w-full">
            <thead>
              <tr>
                <td>#</td>
                <th>Source</th>
                <th>Destination</th>
              </tr>
            </thead>
            <tbody>
              {urlRoutePairs?.length > 0 ? (
                urlRoutePairs.map((item: Item, idx: number) => (
                  <tr key={idx}>
                    <td>{idx}</td>
                    <td>
                      <a className="link hover:link-accent" href={item.source}>
                        {host}
                        {item.source}
                      </a>
                    </td>
                    <td>
                      <a
                        className="link hover:link-accent"
                        href={item.destination}
                      >
                        {item.destination}
                      </a>
                    </td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan={3} className="bg-info text-center text-black">
                    There are no URLs to display.
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
        <div>
          <h2 className="text-xl">What does it do?</h2>
          <p>
            This is a URL shortener. It takes a long URL and converts it into a
            short URL. It is useful for sharing long URLs on social media or any
            URLs for that matter.
          </p>
          <p>
            Although, currently the shortening is done manually by adding K, V
            pairs in the link database.
          </p>
          <br></br>
          <h2 className="text-xl">What is it built on?</h2>
          <p>
            It is built using the Nextjs framework on top of React. The project
            was generated using{" "}
            <a
              className="link"
              href="https://github.com/t3-oss/create-t3-app"
            >{`create-t3-app template`}</a>
            .
          </p>
          <p>
            The path name generation utilizes dynamic routing feature of Nextjs{" "}
            <span className="font-mono text-primary">{`[pathname].js`}</span>.
          </p>
          <br></br>
          <h2 className="pb-4 text-xl">Deploy your own</h2>
          <a
            className="btn border-0 bg-black normal-case text-white hover:bg-stone-900"
            href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Faaanh%2Fpersonal-url-shortener"
          >
            Deploy with Vercel
          </a>
          <p className="pt-4">
            Make sure to fill in the environment variables afterwards according
            to{" "}
            <a
              href="https://github.com/aaanh/personal-url-shortener/blob/master/.env.example"
              className="font-mono text-primary"
            >{`.env.example`}</a>{" "}
            and also add those to the Vercel project settings.
          </p>
        </div>
      </main>
    </>
  );
};

export default Home;
